/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    // Apply the Java Code Coverage plugin
    jacoco
    // Code quality plugins
    pmd
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    val junitBomVersion = "5.8.2"
    implementation(platform("org.junit:junit-bom:$junitBomVersion")) {
        because("Platform, Jupiter, and Vintage versions should match")
    }
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter")

    // Library for testing system exit
    testImplementation("com.github.stefanbirkner:system-rules:1.19.0")

    testRuntimeOnly("org.junit.vintage:junit-vintage-engine") {
        because("allows system-rules requires JUnit 4")
    }
}

application {
    // Define the main class for the application.
    mainClass.set("com.moc.sudoku.App")
}

tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}

tasks.jacocoTestReport {
    dependsOn(tasks.test) // tests are required to run before generating the report
}

pmd {
    isConsoleOutput = true
    isIgnoreFailures = true
    toolVersion = "6.36.0"
    rulesMinimumPriority.set(5)
    ruleSets = listOf("category/java/errorprone.xml", "category/java/bestpractices.xml")
}